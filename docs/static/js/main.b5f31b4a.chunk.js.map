{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","console","log","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"+MAIaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAAgB,EAEnBC,qBAFmB,mBAEhDC,EAFgD,KAEpCC,EAFoC,KAuBvD,OACI,0BAAMC,SAbY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BT,EAAc,CAACG,GAAF,mBAAgBF,KAC7BG,EAAc,OAUb,2BACAM,KAAK,OACLC,MAAOR,EACPS,SAvBmB,SAACN,GACxBO,QAAQC,IAAIR,EAAES,OAAOJ,OACrBP,EAAcE,EAAES,OAAOJ,YCTnBK,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,8CACZ,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLFK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAKgB,EAAIhB,GACTC,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QAVxB,kBAcZY,GAdY,4CAAH,sDCIPK,EAAW,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B4B,KAAO,GACPO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAjBAC,qBAAU,WAENjB,EAAQC,GAAUiB,MAAK,SAAAC,GAIfH,EAAS,CACLT,KAAOY,EACPL,SAAS,SAKvB,CAACb,IAIIc,EDjByBK,CAAanB,GAAhCU,EAHuB,EAG7BJ,KAAcO,EAHe,EAGfA,QAOrB,OACG,oCACE,wBAAIjB,UAAU,yCAAyCI,GACtDa,GAAW,uBAAGjB,UAAU,oCAAb,gBAGZ,yBAAKA,UAAU,aAENc,EAAOF,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAW,IAAKX,EAAIhB,IACLgB,UEvBXY,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,cAHhB,mBAGvBD,EAHuB,KAGXD,EAHW,KAM9B,OACI,oCACO,wEACA,4CACA,kBAAC,EAAD,CAAcA,cAAeA,EAAeC,WAAYA,IACxD,6BAEA,4BAEWA,EAAW+B,KAAK,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CACAoB,IAAKpB,EACLA,SAAYA,UChBvCsB,IAASC,OAEL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b5f31b4a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories,categories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState();\r\n   \r\n\r\n      const handleInputChange = (e) => {\r\n         console.log(e.target.value)\r\n         setInputValue(e.target.value)\r\n         \r\n     }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories([inputValue,...categories])\r\n            setInputValue('')\r\n        }\r\n      \r\n        \r\n        \r\n\r\n\r\n     }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n             <input \r\n             type=\"text\"\r\n             value={inputValue}\r\n             onChange={ handleInputChange}\r\n             />\r\n             \r\n        </form>\r\n    )\r\n\r\n   \r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories : Proptypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n           <img src={url} alt={title} ></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RF7N4yJiAvcqG2DmGcPfk9lk1fJ45KW8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    });\r\n  \r\n    return(gifs);\r\n\r\n   \r\n \r\n}\r\n","import React  from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../Helpers/getGifs';\r\n\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {data: images ,loading} = useFetchGifs(category);\r\n    \r\n    // useEffect(() => {\r\n    //    getGifs(category).then( imgs => setImages(imgs))\r\n    // },[category])\r\n   \r\n\r\n    return (\r\n       <>\r\n         <h3 className=\"animate__animated animate__rubberBand\">{category}</h3>\r\n         {loading && <p className=\"animate__animated animate__flash\"> Loading ...</p>}\r\n\r\n        \r\n         <div className=\"card-grid\">  \r\n               {\r\n                  images.map(img =>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}/>\r\n                  )) \r\n               }     \r\n        </div>\r\n       </>\r\n        \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n       \r\n          \r\n               \r\n                setState({\r\n                    data : imgs,\r\n                    loading: false\r\n                })\r\n           \r\n        });\r\n\r\n    },[category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n     \r\n   \r\n    const [categories, setCategories] = useState(['One punch']);\r\n   \r\n    \r\n    return (\r\n        <>\r\n               <h1>Te amo Maria Camila Novoa juntosx100pre </h1>\r\n               <h2>GifExpertApp</h2>\r\n               <AddCategory  setCategories={setCategories} categories={categories}/>\r\n               <hr/>\r\n               \r\n               <ol>\r\n                  {\r\n                          categories.map( category => (\r\n                           <GiftGrid \r\n                           key={category}\r\n                           category = {category} />\r\n                      ))\r\n                  }\r\n               </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}